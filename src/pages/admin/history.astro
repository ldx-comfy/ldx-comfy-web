---
export const prerender = false;

import Layout from '../../layouts/AdminLayout.astro';
import { requireRolesSSR } from '../../lib/auth/guard';
import { getAllUsersGenerationHistory } from '../../api/workflows';
import { toBackendAbsoluteUrl } from '../../lib/api/client';

// Guard: require admin role
const cookieHeader = Astro.request.headers.get('cookie');
const guard = await requireRolesSSR(Astro.request.url, cookieHeader, { any: ['admin'] });
if (guard.response) {
  // 403 or redirect to login
  return guard.response;
}
const me = guard.me!;

// Fetch all users' generation history
let allUsersHistory: Record<string, any>[] = [];
let historyError: string | null = null;
try {
  allUsersHistory = await getAllUsersGenerationHistory({ cookies: cookieHeader || undefined });
} catch (e: any) {
  historyError = e?.message || 'Failed to fetch all users history';
}
---

<Layout title="所有用户的生成历史记录">
  <div class="history-page">
    <div class="page-header">
      <h1 class="title">所有用户的生成历史记录</h1>
      <div class="header-actions">
        <a class="btn secondary" href="/admin">返回管理</a>
      </div>
    </div>

    {historyError ? (
      <div class="error">{historyError}</div>
    ) : (
      <div class="card history-container">
        {allUsersHistory.length > 0 ? (
          <div class="history-grid">
            {allUsersHistory.map((record) => {
              const images = (record.result && record.result.images) || [];
              const firstImage = images.length > 0 ? images[0] : null;
              // Handle both base64 data URLs and file paths
              let imageUrl = null;
              if (firstImage) {
                if (firstImage.startsWith('data:')) {
                  // Base64 data URL
                  imageUrl = firstImage;
                } else if (firstImage.startsWith('/comfy_out_image/')) {
                  // File path with prefix
                  imageUrl = toBackendAbsoluteUrl(firstImage);
                } else {
                  // File path without prefix
                  imageUrl = toBackendAbsoluteUrl(`/comfy_out_image/${firstImage}`);
                }
              }

              return (
                <div class="history-item">
                  <div class="history-header">
                    <span class="execution-id">执行ID: {record.execution_id}</span>
                    <span class="workflow-id">工作流: {record.workflow_id}</span>
                    <span class="user-id">用户ID: {record.user_id}</span>
                  </div>
                  <div class="history-content">
                    {imageUrl ? (
                      <div class="image-container">
                        <img
                          src={imageUrl}
                          alt="生成結果"
                          class="history-image"
                        />
                      </div>
                    ) : (
                      <div class="no-image">无图片</div>
                    )}
                    <div class="history-details">
                      <div class="timestamp">时间: {new Date(record.timestamp * 1000).toLocaleString('zh-CN')}</div>
                      <div class="images-count">图片数量: {images.length}</div>
                    </div>
                    <div class="history-actions">
                      <a href={`/admin/history/${record.execution_id}`} class="btn secondary">查看详情</a>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        ) : (
          <p>暂无历史记录</p>
        )}
      </div>
    )}
  </div>
</Layout>

<style>
  .history-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 24px;
  }

  .page-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 24px;
  }

  .title {
    margin: 0;
    font-size: 28px;
    color: var(--text-primary);
  }

  .header-actions {
    display: flex;
    gap: 12px;
  }

  .card {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 16px;
  }

  /* History styles */
  .history-container {
    padding: 0;
  }

  .history-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
    padding: 16px;
  }

  .history-item {
    border: 1px solid var(--border-color);
    border-radius: 12px;
    overflow: hidden;
    background: var(--bg-secondary);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .history-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .history-header {
    padding: 12px;
    background: var(--bg-primary);
    border-bottom: 1px solid var(--border-color);
  }

  .execution-id, .workflow-id, .user-id {
    display: block;
    font-size: 0.85rem;
    color: var(--text-secondary);
    margin-bottom: 4px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .history-content {
    padding: 12px;
  }

  .image-container {
    width: 100%;
    height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: 8px;
    background: var(--bg-primary);
    margin-bottom: 12px;
  }

  .history-image {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
  }

  .no-image {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-secondary);
    font-style: italic;
  }

  .history-details {
    font-size: 0.85rem;
    color: var(--text-secondary);
    margin-bottom: 12px;
  }

  .timestamp, .images-count {
    margin-bottom: 4px;
  }

  .history-actions {
    display: flex;
    justify-content: flex-end;
  }

  .btn {
    display: inline-block;
    padding: 8px 12px;
    border-radius: 6px;
    text-decoration: none;
    background: var(--accent-color);
    color: #fff;
    border: 1px solid var(--accent-color);
    font-size: 0.85rem;
    transition: all 0.2s ease;
  }

  .btn.secondary {
    background: transparent;
    color: var(--accent-color);
  }

  .btn:hover {
    opacity: 0.9;
    transform: translateY(-1px);
  }

  .error {
    color: #c62828;
    background: #fee;
    border: 1px solid #f44336;
    border-radius: 8px;
    padding: 12px 16px;
    margin-bottom: 16px;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .history-page {
      padding: 16px;
    }

    .page-header {
      flex-direction: column;
      gap: 16px;
      align-items: flex-start;
    }

    .title {
      font-size: 24px;
    }

    .history-grid {
      grid-template-columns: 1fr;
      gap: 16px;
      padding: 12px;
    }

    .history-item {
      max-width: 100%;
    }

    .image-container {
      height: 150px;
    }
  }

  @media (max-width: 480px) {
    .history-grid {
      grid-template-columns: 1fr;
      gap: 12px;
    }

    .card {
      padding: 12px;
    }

    .history-header {
      padding: 10px;
    }

    .history-content {
      padding: 10px;
    }

    .btn {
      padding: 6px 10px;
      font-size: 0.8rem;
    }
  }
</style>