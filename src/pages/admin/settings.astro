---
export const prerender = false;

import Layout from '../../layouts/AdminLayout.astro';
import { requireRolesSSR } from '../../lib/auth/guard';
import CanCmp from '../../components/Can.astro';
import Toast from '../../components/Toast.astro';

// Guard: require admin role
const cookieHeader = Astro.request.headers.get('cookie');
const guard = await requireRolesSSR(Astro.request.url, cookieHeader, { any: ['admin'] });
if (guard.response) {
  // 403 or redirect to login
  return guard.response;
}
const me = guard.me!;

// 获取当前的ComfyUI服务器地址
let currentAddress = "";
let error: string | null = null;

try {
  const response = await fetch('/api/v1/admin/settings/comfy-server-address', {
    headers: {
      'Cookie': cookieHeader || ''
    }
  });
  
  if (response.ok) {
    const data = await response.json();
    currentAddress = data.address;
  } else {
    error = `获取设置失败: ${response.status} ${response.statusText}`;
  }
} catch (e: any) {
 error = e?.message || '获取设置失败';
}
---

<Layout title="系统设置">
  <div class="settings-page">
    <div class="page-header">
      <h1 class="page-title">系统设置</h1>
      <p class="page-description">管理系统配置</p>
    </div>

    <div class="settings-content">
      <div class="card">
        <h3>ComfyUI 服务器设置</h3>
        <form id="comfy-settings-form">
          <div class="form-group">
            <label for="comfy-server-address">服务器地址</label>
            <input 
              type="text" 
              id="comfy-server-address" 
              name="address" 
              value={currentAddress}
              placeholder="例如: 127.0.0.1:8188"
              required
            />
          </div>
          <button type="submit" class="btn-primary">保存设置</button>
        </form>
      </div>
    </div>
  
  <Toast message="" type="info" />
  <Toast id="toast-success" message="設置保存成功！" type="success" autoShow={false} />
  <Toast id="toast-permission-error" message="您沒有權限更改系統設置。" type="error" autoShow={false} />
</Layout>

<style>
  .settings-page {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    overflow-x: hidden;
    box-sizing: border-box;
  }

  .page-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .page-title {
    font-size: 3rem;
    font-weight: 700;
    color: var(--text-primary);
    margin: 0 0 1rem 0;
    background: linear-gradient(135deg, var(--accent-color), var(--accent-hover));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .page-description {
    font-size: 1.2rem;
    color: var(--text-secondary);
    margin: 0;
  }

  .settings-content {
    min-height: 400px;
 }

  .card {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 24px;
    margin-bottom: 24px;
  }

  .card h3 {
    margin-top: 0;
    color: var(--text-primary);
  }

  .form-group {
    margin-bottom: 20px;
  }

  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--text-primary);
  }

  .form-group input {
    width: 100%;
    padding: 12px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background: var(--bg-input);
    color: var(--text-primary);
    font-size: 1rem;
    box-sizing: border-box;
  }

  .form-group input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
  }

  .btn-primary {
    background: var(--accent-color);
    color: white;
    border: none;
    border-radius: 8px;
    padding: 12px 24px;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .btn-primary:hover {
    background: var(--accent-hover);
  }

 /* 响应式设计 */
  @media (max-width: 768px) {
    .settings-page {
      padding: 1rem;
    }

    .page-title {
      font-size: 2rem;
    }

    .card {
      padding: 16px;
    }
  }

  @media (max-width: 480px) {
    .settings-page {
      padding: 0.75rem;
    }

    .page-title {
      font-size: 1.75rem;
    }
  }
</style>

<script>
  // 表單提交處理
  document.getElementById('comfy-settings-form')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    const address = formData.get('address');
    
    // 显示加载状态
    const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    const originalText = submitButton.textContent;
    submitButton.textContent = '保存中...';
    submitButton.disabled = true;
    
    try {
      const response = await fetch('/api/v1/admin/settings/comfy-server-address', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Cookie': document.cookie
        },
        body: JSON.stringify({ address })
      });
      
      if (response.ok) {
        // 显示成功消息
        // @ts-ignore
        window.showToast('toast-success');
      } else if (response.status === 403) {
        // 显示权限不足消息
        // @ts-ignore
        window.showToast('toast-permission-error');
      } else {
        const errorData = await response.json();
        // 显示通用错误消息
        // @ts-ignore
        window.showToast('toast-error');
      }
    } catch (error: any) {
      // @ts-ignore
      window.showToast('toast-error');
    } finally {
      // 恢复按钮状态
      submitButton.textContent = originalText;
      submitButton.disabled = false;
    }
  });
</script>