---
export const prerender = false;

// Get all available languages and translator functions
const { getAvailableLanguages, getTranslator } = await import('@gudupao/astro-i18n');
const availableLanguages = getAvailableLanguages();
console.log('Available languages:', availableLanguages);

// Test translators for different languages
const testTranslations: Record<string, { title?: string; error?: string; success: boolean }> = {};
for (const lang of availableLanguages) {
  try {
    const t = getTranslator(lang);
    testTranslations[lang] = {
      title: t('imageeditor.title'),
      success: true
    };
  } catch (error) {
    testTranslations[lang] = {
      error: error instanceof Error ? error.message : 'Unknown error',
      success: false
    };
  }
}
console.log('Test translations:', testTranslations);
---

<div class="debug-page">
  <h1>Debug Language Switching</h1>
  <h2>Available Languages</h2>
  <pre>{JSON.stringify(availableLanguages, null, 2)}</pre>
  
  <h2>Translation Tests</h2>
  {Object.entries(testTranslations).map(([lang, result]) => (
    <div class="test-result">
      <h3>Language: {lang}</h3>
      {result.success ? (
        <p>Translation: {result.title}</p>
      ) : (
        <p>Error: {result.error}</p>
      )}
    </div>
  ))}
</div>

<style>
  .debug-page {
    padding: 2rem;
    font-family: Arial, sans-serif;
  }
  
  .debug-page h1 {
    color: var(--text-primary);
  }
  
  .test-result {
    margin: 1rem 0;
    padding: 1rem;
    border: 1px solid var(--border-color);
    border-radius: 4px;
  }
  
  pre {
    background: var(--bg-secondary);
    padding: 1rem;
    border-radius: 4px;
    overflow-x: auto;
  }
</style>